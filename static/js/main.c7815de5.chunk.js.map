{"version":3,"sources":["Components/ContactsList/ContactItem/ContactItem.module.css","Components/Filter/Filter.module.css","Components/App.module.css","Components/ContactsList/ContactsList.module.css","redux/middleware.js","redux/contactsItems/contacts-persist-config.js","redux/contactsItems/contacts-actions.js","redux/contactsItems/contacts-reducer.js","redux/filter/filter-actions.js","redux/filter/filter-reducer.js","redux/store.js","Components/ContactForm/ContactForm.jsx","Components/ContactsList/ContactItem/ContactItem.jsx","Components/ContactsList/ContactsList.jsx","Components/Filter/Filter.jsx","Components/App.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","addContact","createAction","deleteContact","contactsReducer","createReducer","state","payload","filter","contact","id","changeFilter","filterReducer","_","store","configureStore","reducer","contacts","persistReducer","combineReducers","items","devTools","process","persistor","persistStore","ContactForm","name","number","heandleInput","e","setState","currentTarget","value","addNewContact","preventDefault","props","onSubmit","uuidv4","passNewContact","newName","pass","forEach","toLowerCase","alert","className","styles","form","this","label","input","type","onChange","required","example","pattern","button","Component","connect","dispatch","ContactItem","deleteOnClick","item","onClick","includes","target","list","map","container","title","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c7815de5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactItem_contact__1QHIj\",\"item\":\"ContactItem_item__3Hc7G\",\"button\":\"ContactItem_button__2Bemk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1hpH_\",\"label\":\"Filter_label__lwHGj\",\"input\":\"Filter_input__2q567\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3Ax8M\",\"title\":\"App_title__3SkfJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__1qEo3\"};","import { getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport default middleware;\r\n","import storage from 'redux-persist/lib/storage';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nexport default contactsPersistConfig;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contacts/create');\r\nexport const deleteContact = createAction('contacts/delete');\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact } from './contacts-actions';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) => [\r\n    ...state.filter(contact => contact.id !== payload),\r\n  ],\r\n});\r\n\r\nexport { contactsReducer };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('filter/changed');\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { changeFilter } from './filter-actions';\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n","import { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\n\r\nimport middleware from './middleware';\r\nimport contactsPersistConfig from './contactsItems/contacts-persist-config';\r\nimport { contactsReducer } from './contactsItems/contacts-reducer';\r\nimport { filterReducer } from './filter/filter-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(\r\n      contactsPersistConfig,\r\n      combineReducers({\r\n        items: contactsReducer,\r\n        filter: filterReducer,\r\n      }),\r\n    ),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport default { store, persistor };\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addContact } from '../../redux/contactsItems/contacts-actions';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  heandleInput = e => {\r\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n  };\r\n\r\n  addNewContact = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit({ id: uuidv4(), ...this.state });\r\n\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  passNewContact = (newName, number) => {\r\n    let pass = true;\r\n\r\n    this.state.contacts.forEach(({ name }) => {\r\n      if (name.toLowerCase() === newName.toLowerCase()) {\r\n        alert(`${name} is already in your contacts list`);\r\n        pass = false;\r\n      }\r\n    });\r\n\r\n    if (newName === '' || number === '') {\r\n      alert(`Please whrite all info`);\r\n      pass = false;\r\n    }\r\n\r\n    return pass;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.addNewContact}>\r\n        <label className={styles.label}>\r\n          Name:\r\n          <input\r\n            className={styles.input}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.heandleInput}\r\n            required\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Phone number<span className={styles.example}>(000-00-00)</span>:\r\n          <input\r\n            className={styles.input}\r\n            name=\"number\"\r\n            type=\"tel\"\r\n            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n            value={this.state.number}\r\n            onChange={this.heandleInput}\r\n            required\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ contacts }) => ({\r\n  contacts: contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: ({ id, name, number }) =>\r\n    dispatch(addContact({ id, name, number })),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({ name, number, id, deleteOnClick }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <div className={styles.contact}>\r\n        <span>{name}</span>\r\n        <span>{number}</span>\r\n      </div>\r\n\r\n      <button className={styles.button} id={id} onClick={deleteOnClick}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  deleteOnClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { deleteContact } from '../../redux/contactsItems/contacts-actions';\r\n\r\nimport ContactsItem from './ContactItem';\r\n\r\nimport styles from './ContactsList.module.css';\r\n\r\nconst ContactsList = ({ contacts, deleteOnClick }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactsItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          id={id}\r\n          deleteOnClick={deleteOnClick}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteOnClick: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: items.filter(\r\n    ({ name }) => name && name.toLowerCase().includes(filter.toLowerCase()),\r\n  ),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteOnClick: e => dispatch(deleteContact(e.target.id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/filter/filter-actions';\r\n\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <label className={styles.label}>\r\n        Filter:\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ contacts }) => ({\r\n  value: contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ContactForm from './ContactForm';\r\nimport ContactsList from './ContactsList';\r\nimport Filter from './Filter';\r\n\r\nimport styles from './App.module.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <h1 className={styles.title}>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2 className={styles.title}>Contacts</h2>\r\n      <Filter />\r\n      <ContactsList />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items } }) => ({\r\n  contacts: items,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport store from 'redux/store';\r\n\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3KNTy\",\"label\":\"ContactForm_label__2BPMu\",\"input\":\"ContactForm_input__Hbrbj\",\"example\":\"ContactForm_example__10nfh\",\"button\":\"ContactForm_button__yWZuw\"};"],"sourceRoot":""}